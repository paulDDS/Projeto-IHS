
target/release/app:     formato de ficheiro elf64-x86-64

Secções:
Idx Name          Tam.      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400318  0000000000400318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000040  0000000000400338  0000000000400338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400378  0000000000400378  00000378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000040039c  000000000040039c  0000039c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     0000001c  00000000004003c0  00000000004003c0  000003c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       00000060  00000000004003e0  00000000004003e0  000003e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       0000006f  0000000000400440  0000000000400440  00000440  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  00000008  00000000004004b0  00000000004004b0  000004b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 00000030  00000000004004b8  00000000004004b8  000004b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     00000030  00000000004004e8  00000000004004e8  000004e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000018  0000000000400518  0000000000400518  00000518  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000401000  0000000000401000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          00000020  0000000000401020  0000000000401020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000106  0000000000401040  0000000000401040  00001040  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         0000000d  0000000000401148  0000000000401148  00001148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       0000001c  0000000000402000  0000000000402000  00002000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000002c  000000000040201c  000000000040201c  0000201c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000084  0000000000402048  0000000000402048  00002048  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000403de0  0000000000403de0  00002de0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000403de8  0000000000403de8  00002de8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      00000200  0000000000403df0  0000000000403df0  00002df0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000010  0000000000403ff0  0000000000403ff0  00002ff0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000020  0000000000404000  0000000000404000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000004  0000000000404020  0000000000404020  00003020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000004  0000000000404024  0000000000404024  00003024  2**0
                  ALLOC
 25 .comment      0000002e  0000000000000000  0000000000000000  00003024  2**0
                  CONTENTS, READONLY
 26 .gnu.build.attributes 00001cd4  0000000000406028  0000000000406028  00003054  2**2
                  CONTENTS, READONLY, OCTETS
 27 .debug_aranges 00000030  0000000000000000  0000000000000000  00004d28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_info   00000823  0000000000000000  0000000000000000  00004d58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_abbrev 000001f2  0000000000000000  0000000000000000  0000557b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_line   000000a2  0000000000000000  0000000000000000  0000576d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_str    00000249  0000000000000000  0000000000000000  0000580f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_line_str 00000138  0000000000000000  0000000000000000  00005a58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 33 .debug_loclists 00000042  0000000000000000  0000000000000000  00005b90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 34 .debug_rnglists 00000017  0000000000000000  0000000000000000  00005bd2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Desmontagem da secção .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e9 2f 00 00 	mov    0x2fe9(%rip),%rax        # 403ff8 <__gmon_start__@Base>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	call   *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	ret    

Desmontagem da secção .plt:

0000000000401020 <puts@plt-0x10>:
  401020:	ff 35 e2 2f 00 00    	push   0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 2f 00 00    	jmp    *0x2fe4(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401030 <puts@plt>:
  401030:	ff 25 e2 2f 00 00    	jmp    *0x2fe2(%rip)        # 404018 <puts@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	push   $0x0
  40103b:	e9 e0 ff ff ff       	jmp    401020 <_init+0x20>

Desmontagem da secção .text:

0000000000401040 <main>:

// ioctl commands defined for the pci driver header
#include "ioctl_cmds.h"

int main(int argc, char** argv)
{
  401040:	48 83 ec 08          	sub    $0x8,%rsp
	printf("hello world\n");
  401044:	bf 10 20 40 00       	mov    $0x402010,%edi
  401049:	e8 e2 ff ff ff       	call   401030 <puts@plt>
	return 0;
}
  40104e:	31 c0                	xor    %eax,%eax
  401050:	48 83 c4 08          	add    $0x8,%rsp
  401054:	c3                   	ret    

0000000000401055 <.annobin_abi_note.c.hot>:
  401055:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40105c:	00 00 00 
  40105f:	90                   	nop

0000000000401060 <_start>:
  401060:	f3 0f 1e fa          	endbr64 
  401064:	31 ed                	xor    %ebp,%ebp
  401066:	49 89 d1             	mov    %rdx,%r9
  401069:	5e                   	pop    %rsi
  40106a:	48 89 e2             	mov    %rsp,%rdx
  40106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401071:	50                   	push   %rax
  401072:	54                   	push   %rsp
  401073:	45 31 c0             	xor    %r8d,%r8d
  401076:	31 c9                	xor    %ecx,%ecx
  401078:	48 c7 c7 40 10 40 00 	mov    $0x401040,%rdi
  40107f:	ff 15 6b 2f 00 00    	call   *0x2f6b(%rip)        # 403ff0 <__libc_start_main@GLIBC_2.34>
  401085:	f4                   	hlt    

0000000000401086 <.annobin_abi_note.c>:
  401086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40108d:	00 00 00 

0000000000401090 <_dl_relocate_static_pie>:
  401090:	f3 0f 1e fa          	endbr64 
  401094:	c3                   	ret    

0000000000401095 <.annobin__dl_relocate_static_pie.end>:
  401095:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40109c:	00 00 00 
  40109f:	90                   	nop

00000000004010a0 <deregister_tm_clones>:
  4010a0:	b8 28 40 40 00       	mov    $0x404028,%eax
  4010a5:	48 3d 28 40 40 00    	cmp    $0x404028,%rax
  4010ab:	74 13                	je     4010c0 <deregister_tm_clones+0x20>
  4010ad:	b8 00 00 00 00       	mov    $0x0,%eax
  4010b2:	48 85 c0             	test   %rax,%rax
  4010b5:	74 09                	je     4010c0 <deregister_tm_clones+0x20>
  4010b7:	bf 28 40 40 00       	mov    $0x404028,%edi
  4010bc:	ff e0                	jmp    *%rax
  4010be:	66 90                	xchg   %ax,%ax
  4010c0:	c3                   	ret    
  4010c1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4010c8:	00 00 00 00 
  4010cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004010d0 <register_tm_clones>:
  4010d0:	be 28 40 40 00       	mov    $0x404028,%esi
  4010d5:	48 81 ee 28 40 40 00 	sub    $0x404028,%rsi
  4010dc:	48 89 f0             	mov    %rsi,%rax
  4010df:	48 c1 ee 3f          	shr    $0x3f,%rsi
  4010e3:	48 c1 f8 03          	sar    $0x3,%rax
  4010e7:	48 01 c6             	add    %rax,%rsi
  4010ea:	48 d1 fe             	sar    %rsi
  4010ed:	74 11                	je     401100 <register_tm_clones+0x30>
  4010ef:	b8 00 00 00 00       	mov    $0x0,%eax
  4010f4:	48 85 c0             	test   %rax,%rax
  4010f7:	74 07                	je     401100 <register_tm_clones+0x30>
  4010f9:	bf 28 40 40 00       	mov    $0x404028,%edi
  4010fe:	ff e0                	jmp    *%rax
  401100:	c3                   	ret    
  401101:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  401108:	00 00 00 00 
  40110c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401110 <__do_global_dtors_aux>:
  401110:	f3 0f 1e fa          	endbr64 
  401114:	80 3d 09 2f 00 00 00 	cmpb   $0x0,0x2f09(%rip)        # 404024 <completed.0>
  40111b:	75 13                	jne    401130 <__do_global_dtors_aux+0x20>
  40111d:	55                   	push   %rbp
  40111e:	48 89 e5             	mov    %rsp,%rbp
  401121:	e8 7a ff ff ff       	call   4010a0 <deregister_tm_clones>
  401126:	c6 05 f7 2e 00 00 01 	movb   $0x1,0x2ef7(%rip)        # 404024 <completed.0>
  40112d:	5d                   	pop    %rbp
  40112e:	c3                   	ret    
  40112f:	90                   	nop
  401130:	c3                   	ret    
  401131:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  401138:	00 00 00 00 
  40113c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401140 <frame_dummy>:
  401140:	f3 0f 1e fa          	endbr64 
  401144:	eb 8a                	jmp    4010d0 <register_tm_clones>

Desmontagem da secção .fini:

0000000000401148 <_fini>:
  401148:	f3 0f 1e fa          	endbr64 
  40114c:	48 83 ec 08          	sub    $0x8,%rsp
  401150:	48 83 c4 08          	add    $0x8,%rsp
  401154:	c3                   	ret    
